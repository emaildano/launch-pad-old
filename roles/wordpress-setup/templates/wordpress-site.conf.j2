# {{ ansible_managed }}

server {
  listen 80;

  server_name  {% for host in item.value.site_hosts %} {{ host }} {% endfor %};
  access_log   {{ www_root }}/{{ item.key }}/logs/access.log;
  error_log    {{ www_root }}/{{ item.key }}/logs/error.log;

  root  {{ www_root }}/{{ item.key }}/web;
  index index.php index.htm index.html;

  charset utf-8;

  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Frame-Options SAMEORIGIN;
  add_header X-Xss-Protection "1; mode=block" always;

  include wordpress.conf;

  location ~ \.(hh|php)$ {
    fastcgi_intercept_errors on;
    error_page 502 = @fallback;

    try_files $uri =404;

    fastcgi_split_path_info ^(.+\.php)(/.+)$;

    include         fastcgi_params;
    fastcgi_index   index.php;
    fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param   SERVER_NAME $host;
    fastcgi_pass    unix:/var/run/hhvm/hhvm.sock;
    fastcgi_keep_conn on;
  }

  location @fallback {

    try_files $uri =404;

    fastcgi_split_path_info ^(.+\.php)(/.+)$;

    include         fastcgi_params;
    fastcgi_index   index.php;
    fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param   SERVER_NAME $host;
    fastcgi_pass    unix:/var/run/php5-fpm.sock;
  }

  # Cache
  {% if item.value.cache is defined and item.value.cache.enabled | default(false) -%}
    add_header Fastcgi-Cache $upstream_cache_status;
    set $skip_cache 0;

    if ($query_string != "") {
      set $skip_cache 1;
    }

    # Don't cache uris containing the following segments
    if ($request_uri ~* "{{ item.value.cache.skip_cache_uri | default(nginx_skip_cache_uri) }}") {
      set $skip_cache 1;
    }

    # Don't use the cache if cookies includes the following
    if ($http_cookie ~* "{{ item.value.cache.skip_cache_cookie | default(nginx_skip_cache_cookie) }}") {
      set $skip_cache 1;
    }

    fastcgi_cache wordpress;
    fastcgi_cache_valid {{ item.value.cache.duration | default(nginx_cache_duration) }};
    fastcgi_cache_bypass $skip_cache;
    fastcgi_no_cache $skip_cache;
  {% endif -%}

}

{% for host in item.value.site_hosts if strip_www %}
server {
  listen 80;
  server_name www.{{ host }};
  return 301 $scheme://{{ host }}$request_uri;
}
{% endfor %}
